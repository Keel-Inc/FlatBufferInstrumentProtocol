// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace InstrumentProtocol
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Message : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static Message GetRootAsMessage(ByteBuffer _bb) { return GetRootAsMessage(_bb, new Message()); }
  public static Message GetRootAsMessage(ByteBuffer _bb, Message obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyMessage(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, MessageVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Message __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public InstrumentProtocol.MessageType MessageTypeType { get { int o = __p.__offset(4); return o != 0 ? (InstrumentProtocol.MessageType)__p.bb.Get(o + __p.bb_pos) : InstrumentProtocol.MessageType.NONE; } }
  public TTable? MessageType<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public InstrumentProtocol.Command MessageTypeAsCommand() { return MessageType<InstrumentProtocol.Command>().Value; }
  public InstrumentProtocol.Configuration MessageTypeAsConfiguration() { return MessageType<InstrumentProtocol.Configuration>().Value; }
  public InstrumentProtocol.Measurement MessageTypeAsMeasurement() { return MessageType<InstrumentProtocol.Measurement>().Value; }

  public static Offset<InstrumentProtocol.Message> CreateMessage(FlatBufferBuilder builder,
      InstrumentProtocol.MessageType message_type_type = InstrumentProtocol.MessageType.NONE,
      int message_typeOffset = 0) {
    builder.StartTable(2);
    Message.AddMessageType(builder, message_typeOffset);
    Message.AddMessageTypeType(builder, message_type_type);
    return Message.EndMessage(builder);
  }

  public static void StartMessage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddMessageTypeType(FlatBufferBuilder builder, InstrumentProtocol.MessageType messageTypeType) { builder.AddByte(0, (byte)messageTypeType, 0); }
  public static void AddMessageType(FlatBufferBuilder builder, int messageTypeOffset) { builder.AddOffset(1, messageTypeOffset, 0); }
  public static Offset<InstrumentProtocol.Message> EndMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<InstrumentProtocol.Message>(o);
  }
  public static void FinishMessageBuffer(FlatBufferBuilder builder, Offset<InstrumentProtocol.Message> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedMessageBuffer(FlatBufferBuilder builder, Offset<InstrumentProtocol.Message> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class MessageVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*MessageTypeType*/, 1 /*InstrumentProtocol.MessageType*/, 1, false)
      && verifier.VerifyUnion(tablePos, 4, 6 /*MessageType*/, InstrumentProtocol.MessageTypeVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
